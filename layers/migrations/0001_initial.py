# Generated by Django 3.1 on 2021-11-16 19:44

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArrayedFieldIndicators',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_id', models.UUIDField()),
                ('user_id', models.CharField(max_length=30)),
                ('indicator', models.CharField(max_length=50)),
                ('january', models.FloatField(null=True)),
                ('february', models.FloatField(null=True)),
                ('march', models.FloatField(null=True)),
                ('april', models.FloatField(null=True)),
                ('may', models.FloatField(null=True)),
                ('june', models.FloatField(null=True)),
                ('july', models.FloatField(null=True)),
                ('august', models.FloatField(null=True)),
                ('september', models.FloatField(null=True)),
                ('october', models.FloatField(null=True)),
                ('november', models.FloatField(null=True)),
                ('december', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FieldIndicatorCalculations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=30)),
                ('crop_type', models.CharField(max_length=50)),
                ('indicator', models.CharField(max_length=50)),
                ('january', models.FloatField(null=True)),
                ('february', models.FloatField(null=True)),
                ('march', models.FloatField(null=True)),
                ('april', models.FloatField(null=True)),
                ('may', models.FloatField(null=True)),
                ('june', models.FloatField(null=True)),
                ('july', models.FloatField(null=True)),
                ('august', models.FloatField(null=True)),
                ('september', models.FloatField(null=True)),
                ('october', models.FloatField(null=True)),
                ('november', models.FloatField(null=True)),
                ('december', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ForeCastIndicators',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_id', models.UUIDField()),
                ('day', models.DateTimeField()),
                ('user_id', models.CharField(max_length=30)),
                ('avg_temperature', models.FloatField(null=True)),
                ('sum_precipitation', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GridJsonLayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=15)),
                ('field_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('user_id', models.CharField(max_length=30)),
                ('properties', models.JSONField(blank=True, default=dict)),
                ('geometry', models.JSONField(blank=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PolygonJsonLayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=15)),
                ('field_id', models.UUIDField(unique=True)),
                ('user_id', models.CharField(max_length=30)),
                ('properties', models.JSONField(blank=True, default=dict)),
                ('geometry', models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='ShUserDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='Feature', max_length=15)),
                ('user_id', models.CharField(max_length=30)),
                ('geometry', models.JSONField(blank=True, default=dict)),
                ('zoom_level', models.IntegerField(blank=True)),
            ],
        ),
        migrations.AddConstraint(
            model_name='forecastindicators',
            constraint=models.UniqueConstraint(fields=('field_id', 'day'), name='unique forecast row'),
        ),
        migrations.AddConstraint(
            model_name='fieldindicatorcalculations',
            constraint=models.UniqueConstraint(fields=('user_id', 'indicator', 'crop_type'), name='unique indicator row'),
        ),
        migrations.AddConstraint(
            model_name='arrayedfieldindicators',
            constraint=models.UniqueConstraint(fields=('field_id', 'indicator'), name='unique field indicators row'),
        ),
    ]
